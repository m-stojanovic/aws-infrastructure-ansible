# CONFIG FILE WITH UPSTREAM LOAD BALANCING

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    index   index.html index.htm;

    # HTTP
    server {
        listen       80 default_server;
        server_name 111.111.11.1  domain.com ;
        return 301 https://$host$request_uri;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
        }
        # redirect server error pages to the static page /40x.html
        error_page 404 /404.html;
            location = /40x.html {
        } #/
        # redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        } #/
    }

    # PROXY TARGETS
    upstream backend_http {
        server server[0].private_ip:server[0].http;
        server server[1].private_ip:server[1].http;
            }
    upstream backend_grpc {
        server server[0].private_ip:server[0].gprc;
        server server[1].private_ip:server[1].gprc;
            }

    # HTTPS
    server {
        listen               443;
        ssl                  on;
        server_name 111.111.11.1 domain.com www.domain.com;
        server_tokens off;

        # SSL
        ssl_certificate      /etc/nginx/ssl/server-octopusspace.bundle.cert;
        ssl_certificate_key  /etc/nginx/ssl/server-octopusspace.key;
         # if client cert is defined
        #ssl_client_certificate /etc/nginx/ssl/client-octopusspace.key;
	ssl_session_cache shared:ssl_session_cache:20m;
        ssl_session_timeout 10m;
        ssl_prefer_server_ciphers       on;
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

        add_header Strict-Transport-Security "max-age=31536000";

	add_header Access-Control-Allow-Origin $http_origin;
    	add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
     	add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
    	add_header Access-Control-Expose-Headers "Content-Length,Content-Range";
    	add_header Access-Control-Max-Age 1728000;

        location  /octopus-server {
            rewrite ^/octopus-server/(.*)  /$1;

            add_header 'Access-Control-Allow-Headers' 'DNT,Range,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Acopenept-Ranges,Content-Encoding,Content-Range,Content-Length,Pragma,X-Tenant,Accept,Expires,Authorization';
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://backend_http;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            break;
        }

        location  /chat-server {
            rewrite ^/chat-server/(.*)  /$1;
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://chat[0].private_ip:chat[0].http;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            break;
        }

        location  /octopus-octopush {
            rewrite ^/octopus-octopush/(.*)  /$1;
            proxy_pass http://octopush[0].private_ip:octopush[0].http;
            proxy_set_header Host $host;
            break;
        }

        location  /octopus-analytics {
            rewrite ^/octopus-analytics/(.*)  /$1;
            proxy_pass http://analytics[0].private_ip:analytics[0].http;
            proxy_set_header Host $host;
            break;
        }

        location  /octopus-comments {
            rewrite ^/octopus-comments/(.*)  /$1;
            proxy_pass http://comments[0].private_ip:comments[0].http;
            proxy_set_header Host $host;
            break;
        }

	location  /octopus-ecommerce {
            rewrite ^/octopus-ecommerce/(.*)  /$1;
            proxy_pass http://ecommerce[0].private_ip:ecommerce[0].http;
            proxy_set_header Host $host;
            break;
        }

	location  /octopus-ecommerce {
            rewrite ^/octopus-ecommerce/(.*)  /$1;
            proxy_pass http://ecommerce[0].private_ip:ecommerce[0].http;
            proxy_set_header Host $host;
            break;
        }

	location  /transcoder-server {
            rewrite ^/transcoder-server/(.*)  /$1;
            proxy_pass http://transcoder[0].private_ip:transcoder[0].http;
            proxy_set_header Host $host;
            break;
        }

        location  /link/channel {
            rewrite ^/link/channel/(.*) $1;
            return https://www.domain.com;#&referrer=$1;
            #return https://play.google.com/store/apps/details?id=com.carnegie.oip.app&referrer=$1;
	    #proxy_pass https://play.google.com;
            #add_header "Access-Control-Allow-Origin" "*";
            proxy_set_header Host play.google.com;
            break;
        }

        # Load configuration files for the default server block.
        root /carnegie/webapp/tenant;         #include /etc/nginx/default.d/*.conf;
    }
}